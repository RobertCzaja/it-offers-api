version: "3"
services:
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-postgresql:5432/sonarqube
      SONAR_JDBC_USERNAME: admin
      SONAR_JDBC_PASSWORD: admin
      sonar.search.javaOpts: "-Xms2g -Xmx2g"
      sonar.es.bootstrap.checks.disable: "true"
    depends_on:
      - sonar-database
  sonar-database:
    image: 'postgres:15.2'
    container_name: sonar-postgresql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: sonarqube
    volumes:
      - sonar-postgresql-volume:/var/lib/postgresql/data
  database:
    image: 'postgres:15.2'
    container_name: it-offers-postgresql
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgresql-volume:/var/lib/postgresql
    env_file: ".env"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  mongodb:
    image: mongo:latest
    restart: always
    container_name: it-offers-mongodb
    hostname: mongodb
    ports:
      - '27017:27017'
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: it-offers

volumes:
  postgresql-volume: {}
  sonar-postgresql-volume: {}